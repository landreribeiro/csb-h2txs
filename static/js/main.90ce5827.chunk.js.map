{"version":3,"sources":["index.js"],"names":["App","useState","estado","setEstado","palpite","setPalpite","numPalpites","setNumPalpites","min","setMin","max","setMax","iniciarJogo","onClick","className","proxPalpite","parseInt","Math","round","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2KAKA,SAASA,IACP,MAA4BC,mBAAS,WAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGA,EAA8BF,mBAAS,KAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,EAAsBN,mBAAS,GAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAAsBR,mBAAS,KAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KAEMC,EAAc,WAClBT,EAAU,WACVM,EAAO,GACPE,EAAO,KACPJ,EAAe,GACfF,EAAW,MAMb,GAAe,YAAXH,EACF,OAAO,wBAAQW,QAASD,EAAjB,iCAmCT,MAAe,QAAXV,EAEA,gCACE,qDACoBE,EADpB,QACkCE,EADlC,kBAGA,wBAAQO,QAASD,EAAjB,kCAMJ,sBAAKE,UAAU,MAAf,UACE,sDAAmBV,EAAnB,OAMA,wBAAQS,QAnDE,WACZN,EAAeD,EAAc,GAC7BK,EAAOP,GACP,IAAMW,EAAcC,UAAUZ,EAAUI,GAAO,GAAKA,EACpDH,EAAWU,IA+CT,oBACA,wBAAQF,QAxBI,WACdV,EAAU,QAuBR,sBACA,wBAAQU,QA9CE,WACZN,EAAeD,EAAc,GAC7BG,EAAOL,GAcR,IAAMW,EAAcE,KAAKC,OAAOR,EAAMN,GAAW,GAAKA,EAEtDC,EAAWU,IA4BR,uBAKN,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACvB,EAAD,IAASmB,K","file":"static/js/main.90ce5827.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [estado, setEstado] = useState(\"ENTRADA\");\n\n  // palpite\n  const [palpite, setPalpite] = useState(150);\n  const [numPalpites, setNumPalpites] = useState(1);\n\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(300);\n\n  const iniciarJogo = () => {\n    setEstado(\"RODANDO\");\n    setMin(0);\n    setMax(300);\n    setNumPalpites(1);\n    setPalpite(150);\n  };\n  // ENTRADA, RODANDO, FIM\n  // chute de 0 a 300 => 0 <> 300\n  // palpites que a máquina deu\n\n  if (estado === \"ENTRADA\") {\n    return <button onClick={iniciarJogo}>Começar a jogar!</button>;\n  }\n\n  const menor = () => {\n    setNumPalpites(numPalpites + 1);\n    setMax(palpite);\n    const proxPalpite = parseInt((palpite - min) / 2) + min;\n    setPalpite(proxPalpite);\n  };\n\n  const maior = () => {\n    setNumPalpites(numPalpites + 1);\n    setMin(palpite);\n\n    /*\n    Wendel Soares\n    há 1 ano\n    Professor, nesse aulao, sobre a busca binaria, no exemplo que\n    deu usando parseInt quem escolhia 300 a maquina nao acertava,\n    pois ela só chegava em 299 sempre. Creio que porque o parseInt\n    só ignora as casas decimais, mas nao arredonda.\n    Vendo isso utilizei o Math.round no lugar e deu certinho.\n    Só queria dar esse feedback. Comprei seu curso e to\n    super animado!!!. Abraço e ótimo trabalho\n    */\n   // const proxPalpite = parseInt((max - palpite) / 2) + palpite;\n   const proxPalpite = Math.round((max - palpite) / 2) + palpite;\n     \n   setPalpite(proxPalpite);\n  };\n\n  const acertou = () => {\n    setEstado(\"FIM\");\n  };\n\n  if (estado === \"FIM\") {\n    return (\n      <div>\n        <p>\n          Acertei o número {palpite} com {numPalpites} palpite(s)!\n        </p>\n        <button onClick={iniciarJogo}>Iniciar novamente</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <p>O seu número é {palpite}?</p>\n      {/*\n      <p>\n        Min: {min} / Max: {max}\n      </p>\n      */}\n      <button onClick={menor}>Menor!</button>\n      <button onClick={acertou}>Acertou!</button>\n      <button onClick={maior}>Maior!</button>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}